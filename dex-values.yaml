# Default values for dex.
# See https://hub.helm.sh/charts/stable/dex for values that can be overridden

# See https://github.com/helm/charts/blob/master/stable/dex/values.yaml
# for the file that this overrides

ports:
  grpc:
    containerPort: 5150

config:
  issuer: 'http://dex:32000'

  web:
    allowedOrigins: ['*']

  staticClients:
  - id: onos-gui
    redirectURIs:
    - 'http://localhost:4200'
    - 'http://localhost:8182'
    name: 'ONOS GUI'
    secret: ZXhhbXBsZS1hcHAtc2VjcmV0

  - id: example-app
    redirectURIs:
      - 'http://127.0.0.1:5555/callback'
    name: 'Example App'
    secret: ZXhhbXBsZS1hcHAtc2VjcmV0

  staticPasswords:
  - email: aether@opennetworking.org
    # bcrypt hash of the string "rocks"
    hash: $2y$10$mdbcSE3gA01rM8fmwJjLluSb7Y5VWS3hlpxFcKJ.ENiV3v8cnpJwG
    username: admin
    userID: 08a8684b-db88-4b73-90a9-3cd1661f5467

  frontend:
    issuer: Aether
    logoURL: https://www.opennetworking.org/wp-content/uploads/2020/02/aether-logo.png

  grpc:
    address: 0.0.0.0

  connectors:
    - type: ldap
      # Required field for connector id.
      id: ldap
      # Required field for connector name.
      name: LDAP
      config:
        # Host and optional port of the LDAP server in the form "host:port".
        # If the port is not supplied, it will be guessed based on "insecureNoSSL",
        # and "startTLS" flags. 389 for insecure or StartTLS connections, 636
        # otherwise.
        host: ldap-openldap.default.svc.cluster.local:389

        # Following field is required if the LDAP host is not using TLS (port 389).
        # Because this option inherently leaks passwords to anyone on the same network
        # as dex, THIS OPTION MAY BE REMOVED WITHOUT WARNING IN A FUTURE RELEASE.
        #
        insecureNoSSL: true

        # If a custom certificate isn't provide, this option can be used to turn on
        # TLS certificate checks. As noted, it is insecure and shouldn't be used outside
        # of explorative phases.
        #
        # insecureSkipVerify: true

        # When connecting to the server, connect using the ldap:// protocol then issue
        # a StartTLS command. If unspecified, connections will use the ldaps:// protocol
        #
        startTLS: false

        # Path to a trusted root certificate file. Default: use the host's root CA.
        #rootCA: /etc/dex/ldap.ca

        # A raw certificate file can also be provided inline.
        # rootCAData: ( base64 encoded PEM file )

        # The DN and password for an application service account. The connector uses
        # these credentials to search for users and groups. Not required if the LDAP
        # server provides access for anonymous auth.
        # Please note that if the bind password contains a `$`, it has to be saved in an
        # environment variable which should be given as the value to `bindPW`.
        bindDN: uid=serviceaccount,cn=users,dc=opennetworking,dc=com
        bindPW: password

        # User search maps a username and password entered by a user to a LDAP entry.
        userSearch:
          # BaseDN to start the search from. It will translate to the query
          # "(&(objectClass=person)(uid=<username>))".
          baseDN: cn=users,dc=opennetworking,dc=com
          # Optional filter to apply when searching the directory.
          filter: "(objectClass=person)"

          # username attribute used for comparing user entries. This will be translated
          # and combined with the other filter as "(<attr>=<username>)".
          username: uid
          # The following three fields are direct mappings of attributes on the user entry.
          # String representation of the user.
          idAttr: uid
          # Required. Attribute to map to Email.
          emailAttr: mail
          # Maps to display name of users. No default value.
          nameAttr: name

        # Group search queries for groups given a user entry.
        groupSearch:
          # BaseDN to start the search from. It will translate to the query
          # "(&(objectClass=group)(member=<user uid>))".
          baseDN: cn=groups,dc=freeipa,dc=example,dc=com
          # Optional filter to apply when searching the directory.
          filter: "(objectClass=group)"

          # Following list contains field pairs that are used to match a user to a group. It adds an additional
          # requirement to the filter that an attribute in the group must match the user's
          # attribute value.
          userMatchers:
          - userAttr: uid
            groupAttr: member

          # Represents group name.
          nameAttr: name
